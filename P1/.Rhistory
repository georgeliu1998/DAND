install.packages(c("ggplot2", "git2r", "jsonlite", "openssl"))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
market <- read.csv("C:/Users/georg/OneDrive/WorkingDir/Temp/Crescendo/20161124_datascientist_market.csv")
gamestate <- read.csv("C:/Users/georg/OneDrive/WorkingDir/Temp/Crescendo/GameState.csv")
View(market)
View(gamestate)
type(market$Bookmaker)
class(market$Bookmaker)
class(as.POSIXct(market$Bookmaker, format='%Y-%m-%d %H:%M:%OS'))
as.POSIXct(market$Bookmaker, format='%Y-%m-%d %H:%M:%OS')
as.POSIXct(as.character(market$Bookmaker), format='%Y-%m-%d %H:%M:%OS')
as.POSIXct(market$OfferTimestampUtc, format='%Y-%m-%d %H:%M:%OS')
strptime(market$OfferTimestampUtc, format='%Y-%m-%d %H:%M:%OS')
options(digits.secs=3)
strptime(market$OfferTimestampUtc, format='%Y-%m-%d %H:%M:%OS')
class(strptime(market$OfferTimestampUtc, format='%Y-%m-%d %H:%M:%OS'))
str(market$MatchId)
as.factor(market$MatchId)
str(market)
# First subset data with the given matchID
data.mid <- market[(market$MatchId == mid),]
mid <- 994717
# First subset data with the given matchID
data.mid <- market[(market$MatchId == mid),]
# Let's focus on Handicap style betting for now
data.handicap <- data.mid[grep('Handicap', data.mid$MarketType),]
# Convert timestamp column to time format
market$OfferTimestampUtc <- strptime(market$OfferTimestampUtc, "%Y-%m-%d %H:%M:%OS")
# Convert MatchId column to factor type
market$MatchId <- as.factor(market$MatchId)
# Randomly select any of the MatchID to show
str(market)
market$MatchId.levels
levels(market$MatchId)
sample(levels(market$MatchId), 1)
sample(levels(market$MatchId), 1)
viz_match <- function(mid = 994717) {
# Convert timestamp column to time format
market$OfferTimestampUtc <- strptime(market$OfferTimestampUtc, "%Y-%m-%d %H:%M:%OS")
# Convert MatchId column to factor type
market$MatchId <- as.factor(market$MatchId)
# Randomly select any of the MatchID to show
mid <- sample(levels(market$MatchId), 1)
# First subset data with the given matchID
data.mid <- market[(market$MatchId == mid),]
# Let's focus on Handicap style betting for now
data.handicap <- data.mid[grep('Handicap', data.mid$MarketType),]
return(data.handicap)
}
viz_match()
str(market)
if l == None {print 'NONE'}
if (l == None) {print 'NONE'}
if (l == None) {print('NONE')}
l <- None
l <- NaN
l
l == NaN
is.na(l)
viz_match
viz_match()
market <- read.csv("C:/Users/georg/OneDrive/WorkingDir/Temp/Crescendo/20161124_datascientist_market.csv")
gamestate <- read.csv("C:/Users/georg/OneDrive/WorkingDir/Temp/Crescendo/GameState.csv")
viz_match <- function(df = market, mid = 994717) {
# Convert timestamp column to time format
df$OfferTimestampUtc <- strptime(df$OfferTimestampUtc, "%Y-%m-%d %H:%M:%OS")
# Convert MatchId column to factor type
df$MatchId <- as.factor(df$MatchId)
# Randomly select any of the MatchID to show
#mid <- sample(levels(df$MatchId), 1)
# First subset data with the given matchID
df <- df[(df$MatchId == mid),]
# Let's focus on Handicap style betting for now
df <- df[grep('Handicap', df$MarketType),]
return(df)
}
viz_match()
new <- viz_match()
class(new)
new
market <- read.csv("C:/Users/georg/OneDrive/WorkingDir/Temp/Crescendo/20161124_datascientist_market.csv")
gamestate <- read.csv("C:/Users/georg/OneDrive/WorkingDir/Temp/Crescendo/GameState.csv")
df <- market
# Convert timestamp column to time format
df$OfferTimestampUtc <- strptime(df$OfferTimestampUtc, "%Y-%m-%d %H:%M:%OS")
# Convert MatchId column to factor type
df$MatchId <- as.factor(df$MatchId)
# Randomly select any of the MatchID to show
mid <- sample(levels(df$MatchId), 1)
# First subset data with the given matchID
df <- df[(df$MatchId == mid),]
# Let's focus on Handicap style betting for now
df <- df[grep('Handicap', df$MarketType),]
df
df
mid
sum(df$MatchId == mid)
class(mid)
sum(df$MatchId == as.factor(mid))
sum(df$MatchId == as.numeric(mid))
df$MatchId
market <- read.csv("C:/Users/georg/OneDrive/WorkingDir/Temp/Crescendo/20161124_datascientist_market.csv")
gamestate <- read.csv("C:/Users/georg/OneDrive/WorkingDir/Temp/Crescendo/GameState.csv")
df <- market
df
head(df)
df$OfferTimestampUtc <- strptime(df$OfferTimestampUtc, "%Y-%m-%d %H:%M:%OS")
str(df)
df$MatchId <- as.factor(df$MatchId)
str(df$MatchId)
df$MatchId == 991241
sum(df$MatchId == 991241)
mid <- sample(levels(df$MatchId), 1)
mid
class(mid)
as.numeric(mid)
df <- df[df$MatchId == as.numeric(mid),]
df
head(df)
df$MatchId
unique(df$MatchId)
df <- df[grep('Handicap', df$MarketType),]
View(df)
df <- df[grep('Handicap', df$WagerType),]
# Save dataset in a df
df <- market
# Convert timestamp column to time format
df$OfferTimestampUtc <- strptime(df$OfferTimestampUtc, "%Y-%m-%d %H:%M:%OS")
# Convert MatchId column to factor type
df$MatchId <- as.factor(df$MatchId)
# Randomly select any of the MatchID to show
mid <- sample(levels(df$MatchId), 1)
# First subset data with the given matchID
df <- df[df$MatchId == as.numeric(mid),]
# Let's focus on Handicap style betting for now
df <- df[grep('Handicap', df$WagerType),]
df
ggplot(data = df, aes(x = PriceHome, y = PriceAway)) +
geom_point() +
facet_grid(WagerType ~ Bookmaker)
View(df)
# Select a random time to show
time.select <- strptime('2016-11-19 15:49:55.217', "%Y-%m-%d %H:%M:%OS")
df <- df[df$OfferTimestampUtc == time.select,]
View(df)
ggplot(data = df, aes(x = PriceHome, y = PriceAway, colour = Bookmaker)) +
geom_point() +
facet_grid(Points ~ WagerType)
# Now visualize the data
ggplot(data = df, aes(x = PriceHome, y = PriceAway, shape = Bookmaker)) +
geom_point() +
facet_grid(Points ~ WagerType)
ggplot(data = df, aes(x = PriceHome, y = PriceAway, shape = Bookmaker)) +
geom_point() +
facet_grid(WagerType ~ Points)
ggplot(data = df, aes(x = PriceHome, y = PriceAway, shape = Bookmaker)) +
geom_point(alpha = 0.2) +
facet_grid(WagerType ~ Points)
View(df)
View(market)
# Save dataset in a df
df <- market
# If both home and away prices are zero, they're not informative, remove
df <- df[df$PriceHome == 0 & df$PriceAway == 0,]
# Convert timestamp column to time format
df$OfferTimestampUtc <- strptime(df$OfferTimestampUtc, "%Y-%m-%d %H:%M:%OS")
# Convert MatchId column to factor type
df$MatchId <- as.factor(df$MatchId)
# Randomly select any of the MatchID to show
mid <- sample(levels(df$MatchId), 1)
# First subset data with the given matchID
df <- df[df$MatchId == as.numeric(mid),]
# Let's focus on Handicap style betting for now
df <- df[grep('Handicap', df$WagerType),]
# Select a random time to show
time.select <- strptime('2016-11-19 15:49:55.217', "%Y-%m-%d %H:%M:%OS")
df <- df[df$OfferTimestampUtc == time.select,]
# Now visualize the data
ggplot(data = df, aes(x = PriceHome, y = PriceAway, shape = Bookmaker)) +
geom_point(alpha = 0.2) +
facet_grid(WagerType ~ Points)
ggplot(data = df, aes(x = PriceHome, y = PriceAway, shape = Bookmaker)) +
geom_point(alpha = 0.2) +
facet_grid(WagerType ~ Points)
# Save dataset in a df
df <- market
# If both home and away prices are zero, they're not informative, remove
df <- df[df$PriceHome == 0 & df$PriceAway == 0,]
# Convert timestamp column to time format
df$OfferTimestampUtc <- strptime(df$OfferTimestampUtc, "%Y-%m-%d %H:%M:%OS")
# Convert MatchId column to factor type
df$MatchId <- as.factor(df$MatchId)
# Randomly select any of the MatchID to show
mid <- sample(levels(df$MatchId), 1)
# First subset data with the given matchID
df <- df[df$MatchId == as.numeric(mid),]
# Let's focus on Handicap style betting for now
df <- df[grep('Handicap', df$WagerType),]
# Select a random time to show
#time.select <- strptime('2016-11-19 15:49:55.217', "%Y-%m-%d %H:%M:%OS")
#df <- df[df$OfferTimestampUtc == time.select,]
# Now visualize the data
ggplot(data = df, aes(x = PriceHome, y = PriceAway, shape = Bookmaker)) +
geom_point(alpha = 0.2) +
facet_grid(WagerType ~ Points)
View(df)
# Save dataset in a df
df <- market
# If both home and away prices are zero, they're not informative, remove
df <- df[!(df$PriceHome == 0 & df$PriceAway == 0),]
# Convert timestamp column to time format
df$OfferTimestampUtc <- strptime(df$OfferTimestampUtc, "%Y-%m-%d %H:%M:%OS")
# Convert MatchId column to factor type
df$MatchId <- as.factor(df$MatchId)
# Randomly select any of the MatchID to show
mid <- sample(levels(df$MatchId), 1)
# First subset data with the given matchID
df <- df[df$MatchId == as.numeric(mid),]
# Let's focus on Handicap style betting for now
df <- df[grep('Handicap', df$WagerType),]
# Select a random time to show
#time.select <- strptime('2016-11-19 15:49:55.217', "%Y-%m-%d %H:%M:%OS")
#df <- df[df$OfferTimestampUtc == time.select,]
# Now visualize the data
ggplot(data = df, aes(x = PriceHome, y = PriceAway, shape = Bookmaker)) +
geom_point(alpha = 0.2) +
facet_grid(WagerType ~ Points)
# Save dataset in a df
df <- market
# If both home and away prices are zero, they're not informative, remove
df <- df[!(df$PriceHome == 0 & df$PriceAway == 0),]
# Convert timestamp column to time format
df$OfferTimestampUtc <- strptime(df$OfferTimestampUtc, "%Y-%m-%d %H:%M:%OS")
# Convert MatchId column to factor type
df$MatchId <- as.factor(df$MatchId)
# Randomly select any of the MatchID to show
mid <- sample(levels(df$MatchId), 1)
# First subset data with the given matchID
df <- df[df$MatchId == as.numeric(mid),]
# Let's focus on Handicap style betting for now
df <- df[grep('Handicap', df$WagerType),]
# Select a random time to show
#time.select <- strptime('2016-11-19 15:49:55.217', "%Y-%m-%d %H:%M:%OS")
#df <- df[df$OfferTimestampUtc == time.select,]
# Now visualize the data
ggplot(data = df, aes(x = PriceHome, y = PriceAway, shape = Bookmaker)) +
geom_point(alpha = 0.2) +
facet_grid(Points ~ WagerType)
setwd("C:/Users/georg/OneDrive/WorkingDir/Udacity/dand/P1")
dat <- read.csv("stroopdata.csv")
View(dat)
library(tidyr); suppressMessages(library(dplyr))
dat.subject <- mutate(dat, subject = 1:nrow(dat))
View(dat.subject)
tidy.dat <- gather(dat.subject, congruency, time, -subject)
View(tidy.dat)
?gather
library(ggplot2)
library(dplyr)
library(tidyr)
df
head(df)
str(market$ï..Sport)
df[,-c("ï..Sport")]
df[,!c("ï..Sport")]
df[,!"ï..Sport"]
df[,!1]
df[,-1]
head(df[,-1])
d <- data.frame(x=1:5, y=2:6, z=3:7, u=4:8)
d
d[,-1]
d[,-2]
# Save dataset in a df
df <- market
# If both home and away prices are zero, they're not informative, remove
df <- df[!(df$PriceHome == 0 & df$PriceAway == 0),]
# Remove the "ï..Sport" as all entries are soccer
df <- df[,-1]
# Convert timestamp column to time format
df$OfferTimestampUtc <- strptime(df$OfferTimestampUtc, "%Y-%m-%d %H:%M:%OS")
# Convert MatchId column to factor type
df$MatchId <- as.factor(df$MatchId)
# Randomly select any of the MatchID to show
mid <- sample(levels(df$MatchId), 1)
# First subset data with the given matchID
df <- df[df$MatchId == as.numeric(mid),]
# Let's focus on Handicap style betting for now
df <- df[grep('Handicap', df$WagerType),]
head(df)
df <- df[,-8]
df
head(df)
head(market)
df <- market
# Remove cols not needed
df <- df[,-10:14]
df <- df[,-(10:14)]
head(df)
df <- df[!(df$PriceHome == 0 & df$PriceAway == 0),]
head(df)
df <- df[,-1]
View(df)
# Convert timestamp column to time format
df$OfferTimestampUtc <- strptime(df$OfferTimestampUtc, "%Y-%m-%d %H:%M:%OS")
# Convert MatchId column to factor type
df$MatchId <- as.factor(df$MatchId)
# Randomly select any of the MatchID to show
mid <- sample(levels(df$MatchId), 1)
# First subset data with the given matchID
df <- df[df$MatchId == as.numeric(mid),]
# Let's focus on Handicap style betting for now
df <- df[grep('Handicap', df$WagerType),]
View(df)
# Remove PriceDraw column for handicap type games
df <- df[,-8]
View(df)
gather(data = df, key = Home.away, value = Price, PriceHome:PriceAway)
class(as.POSIXct(df$OfferTimestampUtc))
df <- market
# Remove cols not needed
df <- df[,-(10:14)]
# If both home and away prices are zero, they're not informative, remove these obs
df <- df[!(df$PriceHome == 0 & df$PriceAway == 0),]
# Remove the "ï..Sport" as all entries are soccer
df <- df[,-1]
# Convert timestamp column to time format
df$OfferTimestampUtc <- as.POSIXct(strptime(df$OfferTimestampUtc, "%Y-%m-%d %H:%M:%OS"))
# Convert MatchId column to factor type
df$MatchId <- as.factor(df$MatchId)
# Randomly select any of the MatchID to show
mid <- sample(levels(df$MatchId), 1)
# First subset data with the given matchID
df <- df[df$MatchId == as.numeric(mid),]
# Let's focus on Handicap style betting for now
df <- df[grep('Handicap', df$WagerType),]
# Remove PriceDraw column for handicap type games
df <- df[,-8]
# Combine PriceHome and PriceAway into one column for easy visualization
gather(data = df, key = Home.away, value = Price, PriceHome:PriceAway)
new <- gather(data = df, key = Home.away, value = Price, PriceHome:PriceAway)
new
head(new)
df <- gather(data = df, key = Home.away, value = Price, PriceHome:PriceAway)
ggplot(data = df, aes(x = OfferTimestampUtc, y = Price, colour = Bookmaker, shape = Bookmaker)) +
geom_point(alpha = 0.2) +
facet_grid(Points ~ WagerType)
